plugins {
	id "java"
	id "org.openjfx.javafxplugin" version "0.0.10"
}

repositories {
	mavenCentral()
	maven {
		url "https://libraries.minecraft.net"
	}
	maven {
		url uri("${projectDir}/maven/repositories")
	}
}

javafx {
	version = "${JavaFx}"
	modules = [ "javafx.controls" ]
}

dependencies {
	// Local
	implementation "org.controlsfx:ControlsFx:${ControlsFx}" // Fx
	implementation "net.luis:LUtils:${LUtils}" // Utility
	implementation "net.luis:FxUtils:${FxUtils}" // Fx Utility
	// Google
	implementation "com.google.guava:guava:${GoogleGuava}" // Utility
	implementation "com.google.code.gson:gson:${GoogleGson}" // Json
	// Apache
	implementation "org.apache.logging.log4j:log4j-api:${Log4jAPI}" // Logging
	implementation "org.apache.logging.log4j:log4j-core:${Log4jCore}" // Logging
	implementation "org.apache.commons:commons-lang3:${ApacheLang}" // Utility
	implementation "org.apache.commons:commons-email:${ApacheEmail}" // E-Mail
	implementation "commons-codec:commons-codec:${ApacheCodec}" // Cryptic
	implementation "commons-io:commons-io:${ApacheIO}" // IO
	// Other
	implementation "net.sf.jopt-simple:jopt-simple:${JoptSimple}" // Startup
	implementation "com.mojang:datafixerupper:${MojangCodec}" // Codec/Json helper
	implementation "org.jetbrains:annotations:${JetBrainsAnnotations}" // Annotations
	// Test
	testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.1"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.1"
}

test {
	useJUnitPlatform()
}

tasks.register("run", JavaExec) {
	group = "runs"
	getMainClass().set("net.luis.lsync.Main")
	classpath = sourceSets.main.runtimeClasspath
	enableAssertions = true
	args()
	jvmArgs("--module-path", classpath.asPath, "--add-modules", "javafx.controls")
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}

jar {
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}
